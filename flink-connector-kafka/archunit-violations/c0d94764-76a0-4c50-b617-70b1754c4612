Class <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator$PartitionChange> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Class <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator$PartitionOffsetsRetrieverImpl> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$ContextStateSerializer> extends class <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$ContextStateSerializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionContext> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$NextTransactionalIdHintSerializer> extends class <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$NextTransactionalIdHintSerializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$TransactionStateSerializer> extends class <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$TransactionStateSerializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElement> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleRecord> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleWatermark> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Constructor <org.apache.flink.connector.kafka.dynamic.source.enumerator.DynamicKafkaSourceEnumerator.<init>(org.apache.flink.connector.kafka.dynamic.source.enumerator.subscriber.KafkaStreamSubscriber, org.apache.flink.connector.kafka.dynamic.metadata.KafkaMetadataService, org.apache.flink.api.connector.source.SplitEnumeratorContext, org.apache.flink.connector.kafka.source.enumerator.initializer.OffsetsInitializer, org.apache.flink.connector.kafka.source.enumerator.initializer.OffsetsInitializer, java.util.Properties, org.apache.flink.api.connector.source.Boundedness, org.apache.flink.connector.kafka.dynamic.source.enumerator.DynamicKafkaSourceEnumState, org.apache.flink.connector.kafka.dynamic.source.enumerator.StoppableKafkaEnumContextProxy$StoppableKafkaEnumContextProxyFactory)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSourceEnumerator.java:0)
Constructor <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.<init>(org.apache.flink.api.connector.source.SourceReaderContext, org.apache.flink.connector.kafka.source.reader.deserializer.KafkaRecordDeserializationSchema, java.util.Properties)> calls constructor <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.<init>(int)> in (DynamicKafkaSourceReader.java:114)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$ContextStateSerializer.<init>()> calls constructor <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton.<init>()> in (FlinkKafkaProducer.java:1733)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionContext.<init>(java.util.Set)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState.<init>(java.lang.String, long, short, org.apache.flink.streaming.connectors.kafka.internals.FlinkKafkaInternalProducer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState.<init>(java.lang.String, org.apache.flink.streaming.connectors.kafka.internals.FlinkKafkaInternalProducer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState.<init>(org.apache.flink.streaming.connectors.kafka.internals.FlinkKafkaInternalProducer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$NextTransactionalIdHintSerializer.<init>()> calls constructor <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton.<init>()> in (FlinkKafkaProducer.java:1879)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$TransactionStateSerializer.<init>()> calls constructor <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton.<init>()> in (FlinkKafkaProducer.java:1630)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.<init>(java.lang.Object, java.util.List, org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long)> has parameter of type <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer> in (AbstractFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.<init>(java.lang.Object, java.util.List, org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long)> has parameter of type <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService> in (AbstractFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.<init>(org.apache.flink.api.common.typeutils.TypeSerializer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.<init>(java.util.List, java.util.regex.Pattern, org.apache.flink.connector.kafka.sink.KafkaPartitioner, org.apache.flink.api.common.serialization.SerializationSchema, org.apache.flink.api.common.serialization.SerializationSchema, [Lorg.apache.flink.table.data.RowData$FieldGetter;, [Lorg.apache.flink.table.data.RowData$FieldGetter;, boolean, [I, boolean)> has parameter of type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Field <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.metricGroups> has generic type <java.util.Map<java.lang.String, org.apache.flink.runtime.metrics.groups.AbstractMetricGroup>> with type argument depending on <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup> in (KafkaClusterMetricGroupManager.java:0)
Field <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.availabilityHelper> has type <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper> in (DynamicKafkaSourceReader.java:0)
Field <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.timerService> has type <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService> in (AbstractFetcher.java:0)
Field <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.watermarkOutputMultiplexer> has type <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer> in (AbstractFetcher.java:0)
Field <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.dis> has type <org.apache.flink.core.memory.DataInputDeserializer> in (KafkaShuffleFetcher.java:0)
Field <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.dos> has type <org.apache.flink.core.memory.DataOutputSerializer> in (FlinkKafkaShuffleProducer.java:0)
Field <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.keyFieldGetters> has type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Field <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.valueFieldGetters> has type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.DynamicKafkaSource.getKafkaStreamSubscriber()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSource.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.close()> calls method <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup.close()> in (KafkaClusterMetricGroupManager.java:73)
Method <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.close(java.lang.String)> calls method <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup.close()> in (KafkaClusterMetricGroupManager.java:62)
Method <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.register(java.lang.String, org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroup)> checks instanceof <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup> in (KafkaClusterMetricGroupManager.java:42)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.completeAndResetAvailabilityHelper()> calls constructor <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.<init>(int)> in (DynamicKafkaSourceReader.java:475)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.completeAndResetAvailabilityHelper()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.getAvailableFuture()> in (DynamicKafkaSourceReader.java:474)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.completeAndResetAvailabilityHelper()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.getAvailableFuture()> in (DynamicKafkaSourceReader.java:485)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.getAvailabilityHelper()> has return type <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper> in (DynamicKafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.getAvailabilityHelper()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.isActivelyConsumingSplits()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.isAvailable()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.getAvailableFuture()> in (DynamicKafkaSourceReader.java:383)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.isAvailable()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.resetToUnAvailable()> in (DynamicKafkaSourceReader.java:381)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.syncAvailabilityHelperWithReaders()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.anyOf(int, java.util.concurrent.CompletableFuture)> in (DynamicKafkaSourceReader.java:496)
Method <org.apache.flink.connector.kafka.sink.KafkaSink.getKafkaProducerConfig()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSink.java:0)
Method <org.apache.flink.connector.kafka.sink.KafkaSinkBuilder.setRecordSerializer(org.apache.flink.connector.kafka.sink.KafkaRecordSerializationSchema)> calls method <org.apache.flink.api.java.ClosureCleaner.clean(java.lang.Object, org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel, boolean)> in (KafkaSinkBuilder.java:152)
Method <org.apache.flink.connector.kafka.sink.KafkaWriter.getCurrentProducer()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaWriter.java:0)
Method <org.apache.flink.connector.kafka.sink.KafkaWriter.getProducerPool()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaWriter.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.createReader(org.apache.flink.api.connector.source.SourceReaderContext, java.util.function.Consumer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.getConfiguration()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.getKafkaSubscriber()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.getStoppingOffsetsInitializer()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumStateSerializer.serializeTopicPartitions(java.util.Collection)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumStateSerializer.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator.deepCopyProperties(java.util.Properties, java.util.Properties)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator.getPartitionChange(java.util.Set)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator.getSplitOwner(org.apache.kafka.common.TopicPartition, int)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReader.consumer()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaPartitionSplitReader.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReader.setConsumerClientRack(java.util.Properties, java.lang.String)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaPartitionSplitReader.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaSourceReader.getNumAliveFetchers()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaSourceReader.getOffsetsToCommit()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceReader.java:0)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.onProcessingTime(long)> calls method <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer.onPeriodicEmit()> in (AbstractFetcher.java:604)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.onProcessingTime(long)> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.getCurrentProcessingTime()> in (AbstractFetcher.java:608)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.onProcessingTime(long)> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.registerTimer(long, org.apache.flink.api.common.operators.ProcessingTimeService$ProcessingTimeCallback)> in (AbstractFetcher.java:608)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.start()> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.getCurrentProcessingTime()> in (AbstractFetcher.java:593)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.start()> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.registerTimer(long, org.apache.flink.api.common.operators.ProcessingTimeService$ProcessingTimeCallback)> in (AbstractFetcher.java:593)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls constructor <org.apache.flink.core.memory.DataInputDeserializer.<init>([B)> in (KafkaShuffleFetcher.java:240)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.ByteSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:244)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.ByteSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:245)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.IntSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:254)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.LongSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:251)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.LongSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:255)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.core.memory.DataInputDeserializer.setBuffer([B)> in (KafkaShuffleFetcher.java:238)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.ByteSerializer.INSTANCE> in (KafkaShuffleFetcher.java:244)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.ByteSerializer.INSTANCE> in (KafkaShuffleFetcher.java:245)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.IntSerializer.INSTANCE> in (KafkaShuffleFetcher.java:253)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.LongSerializer.INSTANCE> in (KafkaShuffleFetcher.java:250)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.LongSerializer.INSTANCE> in (KafkaShuffleFetcher.java:254)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls constructor <org.apache.flink.core.memory.DataOutputSerializer.<init>(int)> in (FlinkKafkaShuffleProducer.java:186)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.clear()> in (FlinkKafkaShuffleProducer.java:205)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.getCopyOfBuffer()> in (FlinkKafkaShuffleProducer.java:204)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:190)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:193)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:195)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.writeLong(long)> in (FlinkKafkaShuffleProducer.java:196)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls constructor <org.apache.flink.core.memory.DataOutputSerializer.<init>(int)> in (FlinkKafkaShuffleProducer.java:212)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.clear()> in (FlinkKafkaShuffleProducer.java:225)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.getCopyOfBuffer()> in (FlinkKafkaShuffleProducer.java:224)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:216)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:217)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.writeInt(int)> in (FlinkKafkaShuffleProducer.java:218)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.writeLong(long)> in (FlinkKafkaShuffleProducer.java:219)
Method <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.createProjectedRow(org.apache.flink.table.data.RowData, org.apache.flink.types.RowKind, [Lorg.apache.flink.table.data.RowData$FieldGetter;)> has parameter of type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaConnectorOptionsUtil.createKeyFormatProjection(org.apache.flink.configuration.ReadableConfig, org.apache.flink.table.types.DataType)> calls method <org.apache.flink.table.types.logical.utils.LogicalTypeChecks.getFieldNames(org.apache.flink.table.types.logical.LogicalType)> in (KafkaConnectorOptionsUtil.java:543)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaConnectorOptionsUtil.createValueFormatProjection(org.apache.flink.configuration.ReadableConfig, org.apache.flink.table.types.DataType)> calls method <org.apache.flink.table.types.logical.utils.LogicalTypeChecks.getFieldCount(org.apache.flink.table.types.logical.LogicalType)> in (KafkaConnectorOptionsUtil.java:587)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaDynamicSink.createSerialization(org.apache.flink.table.connector.sink.DynamicTableSink$Context, org.apache.flink.table.connector.format.EncodingFormat, [I, java.lang.String)> calls method <org.apache.flink.table.types.utils.DataTypeUtils.stripRowPrefix(org.apache.flink.table.types.DataType, java.lang.String)> in (KafkaDynamicSink.java:386)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaDynamicSink.getFieldGetters(java.util.List, [I)> has return type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (KafkaDynamicSink.java:0)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaDynamicSource.createDeserialization(org.apache.flink.table.connector.source.DynamicTableSource$Context, org.apache.flink.table.connector.format.DecodingFormat, [I, java.lang.String)> calls method <org.apache.flink.table.types.utils.DataTypeUtils.stripRowPrefix(org.apache.flink.table.types.DataType, java.lang.String)> in (KafkaDynamicSource.java:566)
